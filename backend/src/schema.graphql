# import * from './generated/prisma.graphql'
type SuccessMessage{
    message: String!
}

type Mutation{
    createItem(title: String, description: String, price: Int, image: [String!]!, largeImage: [String!]!): Item!
    updateItem(id: ID!, title: String, description: String, price: Int, image: [String!]!, largeImage: [String!]!): Item!
    deleteItem(id: ID!): Item
    signup(email: String!, password: String!, passwordConfirm: String, name: String!): User!
    signin(email: String!, password: String!): User!
    signout: SuccessMessage
    updateUser(id:ID!, name: String, logo: String): User!
    deleteUser(id: ID!): User
    requestReset(email: String!, reset: String!): SuccessMessage
    resetPassword(resetToken: String!, password: String!, confirmPassword: String!): User!
    resetEmail(resetToken: String!, email: String!, confirmEmail: String!): User!
    updatePermissions(permissions: [Permission], userId: ID!): User
    addToCart(id: ID!): CartItem
    removeFromCart(id: ID!): CartItem
    createOrder(token: String!): Order!
    createFeedback(rating: Int!, text: String!, sellerId: ID!, orderItemId: ID!): Feedback
    deleteFeedback(id: ID!): Feedback!
}

type Query{
    items(where: ItemWhereInput, orderBy: ItemOrderByInput, skip: Int, first: Int): [Item]!
    item(where: ItemWhereUniqueInput!): Item!
    itemsConnection(where: ItemWhereInput): ItemConnection!
    me: User
    user(where: UserWhereUniqueInput!): User!
    users: [User]!
    orders(orderBy: OrderOrderByInput): [Order]!
    order(id: ID!): Order
    feedbacks: [Feedback]
}

type User{
    id: ID!
    name: String!
    email: String!
    permissions: [Permission!]!
    logo: String
    items:[Item!]!
    cart: [CartItem!]!
    orders: [Order!]!
    feedback: [Feedback!]!
    ratingSum: Float
}